apply plugin: 'application'
apply plugin: 'idea'

repositories {
    jcenter()
}

configurations {
    checkstyleClasspath
}

mainClassName = "io.mavsdk.example.TakeoffAndLand"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

task takeoffAndLand(dependsOn: 'classes', type: JavaExec) {
    main = "io.mavsdk.example.TakeoffAndLand"
    classpath = sourceSets.main.runtimeClasspath
}

task setRtlAltitude(dependsOn: 'classes', type: JavaExec) {
    main = "io.mavsdk.example.SetRtlAltitude"
    classpath = sourceSets.main.runtimeClasspath
}

task runMission(dependsOn: 'classes', type: JavaExec) {
    main = "io.mavsdk.example.RunMission"
    classpath = sourceSets.main.runtimeClasspath
}

task exportDeps(type: Copy) {
    from sourceSets.main.runtimeClasspath into 'build/jshell_classpath_export/'
}

task jshell(dependsOn: 'exportDeps', type: Exec) {
    print("\n\n=======\nWARNING: this is not the best way to run `jshell`, as it may not be cross-platform and it won't have auto-completion enabled.\nYou may want to run the following instead:\n\n    \$ ./gradlew exportDeps\n    \$ jshell --class-path \$(ls -d build/jshell_classpath_export/* | tr '\\n' ':')\n=======\n\n")
    standardInput = System.in
    commandLine 'bash', '-c', "jshell --class-path \$(ls -d build/jshell_classpath_export/* | tr '\\n' ':')"
}

task checkstyle(type: Checkstyle) {
    configFile = rootProject.file("config/checkstyle/checkstyle.xml")
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    classpath = project.files()
    checkstyleClasspath = project.configurations.checkstyleClasspath

    maxWarnings 0

    reports {
        xml.enabled true
        xml.destination new File("$project.buildDir/reports/checkstyle/checkstyle_report.xml")

        html.enabled true
        html.destination new File("$project.buildDir/reports/checkstyle/checkstyle_report.html")
    }
}

build.dependsOn 'checkstyle'

idea {
    module {
        inheritOutputDirs = false
        outputDir = compileJava.destinationDir
        testOutputDir = compileTestJava.destinationDir
    }
}

dependencies {
    checkstyleClasspath 'com.puppycrawl.tools:checkstyle:8.5'

    implementation 'io.mavsdk:mavsdk:0.3.1'

    implementation 'ch.qos.logback:logback-core:1.2.3'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'org.slf4j:slf4j-api:1.7.28'
}
